#!/usr/bin/env perl

# usage: dirmon [DIRECTORY] - directory is defaulting to .

use common::sense;
use Digest::MD5 qw(md5_hex);

my $dir=shift//'.';
die "Cannot access $dir: $!\n" unless (-x $dir && -d $dir);
chdir $dir;
my @files=glob'*';
@files=grep(!-d $_, @files);

unless (-e ".filehashes") {
  warn "monitoring file .filehashes doesn't exist yet; starting to monitor this directory.\n";
  createfile();
  exit 0;
}

my (%old_status,%new_status);

open HASHFILE, "<.filehashes" or die "Cannot open .filehashes: $!";
while (my $statusline=<HASHFILE>) {
  chomp $statusline;
  next if $statusline=~'^#'; #skip comments
  my ($file, $size, $digest)=split ':', $statusline;
  $old_status{$file}=[$digest, $size];
}
close HASHFILE or die "Cannot close .filehashes: $!\n";

foreach my $file(@files) {
  open FILE, "<$file" or die "Cannot open $file: $!\n";
  $new_status{$file}=[md5_hex(<FILE>), (stat($file))[7]];
  close FILE or die "Cannot close $file: $!\n";
}

foreach my $file (keys %old_status) {
  next if defined $new_status{$file};
  say "ALERT! $file is missing."
}

foreach my $file (keys %new_status) {
  next if defined $old_status{$file};
  say "ALERT! $file is new."
}

foreach my $file (keys %new_status) {
  next if $old_status{$file}[0] eq $new_status{$file}[0];
  say "$file has changed.";
  say "    Last check: Size: ".$old_status{$file}[1];
  say "                MD5:  ".$old_status{$file}[0];
  say "    Actual:     Size: ".$new_status{$file}[1];
  say "                MD5:  ".$new_status{$file}[0];
}

exit 0;

sub createfile {
  open HASHFILE, ">.filehashes" or die "Cannot open .filehashes: $!\n";
  print HASHFILE "#name:size:MD5\n";
  foreach my $file (@files) {
    my $size=(stat($file))[7]; 
    open FILE, "<$file" or die "Cannot open $file\n";
    my $digest=md5_hex(<FILE>);
    close FILE or die "Cannot close $file\n";
    print HASHFILE $file.':'.$size.':'.$digest."\n";
  }
  close HASHFILE or die "Cannot close .filehashes: $!\n";
}
